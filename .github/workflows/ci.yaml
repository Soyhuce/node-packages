name: ci

on:
  push:
    branches: [main]

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: install pnpm
        run: |
          npm i pnpm@latest -g

      - name: load cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            ./.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}

      - name: setup pnpm config
        run: |
          pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: install dependencies
        run: |
          pnpm install --ignore-scripts

      - name: run test suite
        run: |
          pnpm lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: install pnpm
        run: |
          npm i pnpm@latest -g

      - name: load cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            ./.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}

      - name: setup pnpm config
        run: |
          pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: install dependencies
        run: |
          pnpm install --ignore-scripts

      - name: build packages
        run: |
          pnpm build:packages

      - name: run test suite
        run: |
          pnpm test:unit

  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: install pnpm
        run: |
          npm i pnpm@latest -g

      - name: load cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            ./.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}

      - name: setup pnpm config
        run: |
          pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: install dependencies
        run: |
          pnpm install --ignore-scripts
          npx playwright install --with-deps

      - name: run test suite
        run: |
          pnpm test:e2e

      - name: save e2e test results
        timeout-minutes: 120
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report

  security:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: install pnpm
        run: |
          npm i pnpm@latest -g

      - name: load cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            ./.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}

      - name: setup pnpm config
        run: |
          pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: install dependencies
        run: |
          pnpm install --ignore-scripts

      - name: check vulnerabilities
        run: |
          pnpm ci:security

  release:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - security
    steps:
      - name: checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: install pnpm
        run: |
          npm i pnpm@latest -g

      - name: load cache
        uses: actions/cache@v3.0.11
        with:
          path: |
            ./.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}

      - name: creating .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: setup pnpm config
        run: |
          pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: install dependencies
        run: |
          pnpm install --ignore-scripts

      - name: build packages
        run: |
          pnpm build:packages

      - name: create and publish versions
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          commit: "chore: update versions 🏹"
          title: "chore: update versions 🏹"
          publish: pnpm ci:release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: deploy storybook on Github pages
        run: |
          pnpm build:storybook
          pnpm deploy:storybook
